<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on mojidong blog</title>
    <link>https://www.mojidong.com/post/</link>
    <description>Recent content in Posts on mojidong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 24 Mar 2019 06:54:17 +0800</lastBuildDate>
    
	<atom:link href="https://www.mojidong.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mybatis批处理(batch)</title>
      <link>https://www.mojidong.com/post/2019-03-24-mybatis-batch/</link>
      <pubDate>Sun, 24 Mar 2019 06:54:17 +0800</pubDate>
      
      <guid>https://www.mojidong.com/post/2019-03-24-mybatis-batch/</guid>
      <description>最近一个老的项目从ibatis升级到了mybatis，之前的批处理方法需要在mybatis中重新实现。 实际实现过程中发现并没有如ibatis</description>
    </item>
    
    <item>
      <title>thread pool中使用thread local的问题</title>
      <link>https://www.mojidong.com/post/2019-03-02-thread-pool/</link>
      <pubDate>Sat, 02 Mar 2019 20:58:56 +0800</pubDate>
      
      <guid>https://www.mojidong.com/post/2019-03-02-thread-pool/</guid>
      <description>最近发现生产环境一个十分诡异的问题，这里与大家分享一下。 问题 最近发现线上服务报错，报错是偶发的，会自动恢复。主体代码如下: 1 2 3 4 5 6 7 8 9</description>
    </item>
    
    <item>
      <title>java增强型Thread Local, InheritableThreadLocal</title>
      <link>https://www.mojidong.com/post/2019-02-24-thread-local/</link>
      <pubDate>Sun, 24 Feb 2019 10:28:30 +0800</pubDate>
      
      <guid>https://www.mojidong.com/post/2019-02-24-thread-local/</guid>
      <description>最近使用InheritableThreadLocal遇到一些问题，这里总结一下。 Thread Local ThreadLocal是绑定到线程上的上下文，他可以让你</description>
    </item>
    
    <item>
      <title>java排序违返规约错误</title>
      <link>https://www.mojidong.com/post/2019-02-23-java-sort-contract/</link>
      <pubDate>Sat, 23 Feb 2019 20:33:39 +0800</pubDate>
      
      <guid>https://www.mojidong.com/post/2019-02-23-java-sort-contract/</guid>
      <description>问题 最近发现线上一段大半年都没有变动的代码报错。 错误栈如下： 1 2 3 4 5 6 7 Exception in thread &amp;#34;main&amp;#34; java.lang.IllegalArgumentException: Comparison method violates its general contract! at java.util.TimSort.mergeHi(TimSort.java:899) at java.util.TimSort.mergeAt(TimSort.java:516) at java.util.TimSort.mergeCollapse(TimSort.java:441) at java.util.TimSort.sort(TimSort.java:245) at java.util.Arrays.sort(Arrays.java:1438) at java.util.Arrays$ArrayList.sort(Arrays.java:3895) 通过日志定位代码发现</description>
    </item>
    
    <item>
      <title>迁移博客到hugo</title>
      <link>https://www.mojidong.com/post/2018-10-14-migrate-blog-to-hugo/</link>
      <pubDate>Sun, 14 Oct 2018 12:53:58 +0800</pubDate>
      
      <guid>https://www.mojidong.com/post/2018-10-14-migrate-blog-to-hugo/</guid>
      <description>这两天把blog从jekyll迁移到了hugo。下面是hugo对自已的简介： The world’s fastest framework for building websites. Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes</description>
    </item>
    
    <item>
      <title>zsh autosuggestions在tmux环境下高亮问题处理</title>
      <link>https://www.mojidong.com/post/2017-05-14-zsh-autosuggestions/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2017-05-14-zsh-autosuggestions/</guid>
      <description>问题 最近在尝试使用zsh-autosuggestions插件，在tmux中发现提示的高亮效果无效这里记录下解决方法。 现象如下： 在终端下zsh</description>
    </item>
    
    <item>
      <title>socket5 协议学习与实现(二)</title>
      <link>https://www.mojidong.com/post/2015-10-06-socket5-2/</link>
      <pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2015-10-06-socket5-2/</guid>
      <description>今天我们就来实现一下socket5的tcp代理。根据之前的学习我们了解到建立socket5代理需要三个阶段 下面我们使用golang来实现它。</description>
    </item>
    
    <item>
      <title>vpn的iptables配置</title>
      <link>https://www.mojidong.com/post/2016-02-01-vpn-of-iptables/</link>
      <pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2016-02-01-vpn-of-iptables/</guid>
      <description>之前配置vpn在配置iptables这一块遇到一些问题这里总结一下。 我的iptables配置如下 1 2 3 4 5 6 7 8 9 iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -m state --state</description>
    </item>
    
    <item>
      <title>socket5 协议学习与实现(一)</title>
      <link>https://www.mojidong.com/post/2015-03-07-socket5-1/</link>
      <pubDate>Sat, 07 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2015-03-07-socket5-1/</guid>
      <description>最近研究了下socket5协议,它是一个tcp、udp的代理协议(socket4不支持udp),大部分软件都支持socket5代理。 一般来说</description>
    </item>
    
    <item>
      <title>设置action bar、action bar tab 样式及高度</title>
      <link>https://www.mojidong.com/post/2014-08-23-action-bar-tab-height/</link>
      <pubDate>Sat, 23 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2014-08-23-action-bar-tab-height/</guid>
      <description>android 3.0 引入了action bar,supper library支持2.1以上版本。 本文主要说下action bar样式的设置。 首先我们要使用action bar须要使用</description>
    </item>
    
    <item>
      <title>linux防火墙iptables详解(二)</title>
      <link>https://www.mojidong.com/post/2014-07-06-linux-iptables-detail-2/</link>
      <pubDate>Sun, 06 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2014-07-06-linux-iptables-detail-2/</guid>
      <description>之前讲解了iptables基本语法和用法，今天详细讲下iptables规则链的整个执行流程。 规则链执行流程 先上一张图（借用下鸟哥的图） 从上图</description>
    </item>
    
    <item>
      <title>linux防火墙iptables详解(一)</title>
      <link>https://www.mojidong.com/post/2013-11-17-linux-iptables-detail-1/</link>
      <pubDate>Sun, 17 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-11-17-linux-iptables-detail-1/</guid>
      <description>今天详细讲下linux防火墙iptables。 1.表和链 iptables有如下几个表： mangle表主要功能是修改数据包 nat表主要用来修改</description>
    </item>
    
    <item>
      <title>linux防火墙iptable使用简介</title>
      <link>https://www.mojidong.com/post/2013-11-12-linux-iptables/</link>
      <pubDate>Tue, 12 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-11-12-linux-iptables/</guid>
      <description>iptables是Linux上常用的防火墙软件。这里简单介绍下怎么使用，依葫芦画瓢就可以了，对于懒人来说足够了。如果你想更详细的了解ipta</description>
    </item>
    
    <item>
      <title>chrome extension show ip</title>
      <link>https://www.mojidong.com/post/2013-11-05-chrome-extension-show-ip/</link>
      <pubDate>Tue, 05 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-11-05-chrome-extension-show-ip/</guid>
      <description>最近开发了一个chrome插件show ip用来显示请求页面的ip地址。 起因 最近经常会在测试环境和线上环境切换（修改host），由于chrom</description>
    </item>
    
    <item>
      <title>ruby字符串的encoding,force_encoding,encode,encode!</title>
      <link>https://www.mojidong.com/post/2013-05-19-ruby-string-encoding/</link>
      <pubDate>Sun, 19 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-05-19-ruby-string-encoding/</guid>
      <description>ruby1.9开始对字符串编码支持已经比较完善，我们可以直接通过使用String类的实例方法 encoding,force_encoding,</description>
    </item>
    
    <item>
      <title>ruby编码详解</title>
      <link>https://www.mojidong.com/post/2013-05-18-ruby-encoding/</link>
      <pubDate>Sat, 18 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-05-18-ruby-encoding/</guid>
      <description>今天主要说下ruby编码，主要针对ruby1.9及以上版本。 &amp;gt; ruby1.8对编码的支持是比较弱的 ruby中的编码 ruby中编码大致分为两类</description>
    </item>
    
    <item>
      <title>浮点数在计算机中的存储方式</title>
      <link>https://www.mojidong.com/post/2013-05-11-floating-point-numbers-in-the-computer-memory/</link>
      <pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-05-11-floating-point-numbers-in-the-computer-memory/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天来说下小数在计算机中是怎样存储的。 定点数与浮点数 小数点在计算机中通常有两种表示方法： 约定</description>
    </item>
    
    <item>
      <title>python的exec、eval详解</title>
      <link>https://www.mojidong.com/post/2013-05-10-python-exec-eval/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-05-10-python-exec-eval/</guid>
      <description>简介 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;python 动态执行字符串代码片段（也可以是文件）， 一般会用到exec,eval。 exec 1 exec_stmt ::= &amp;#34;exec&amp;#34; or_expr [&amp;#34;in&amp;#34; expression [&amp;#34;,&amp;#34; expression]] 注意：exec 是一个语法声明，不是一个函数.</description>
    </item>
    
    <item>
      <title>rails部署nginx&#43;unicorn详解</title>
      <link>https://www.mojidong.com/post/2013-04-20-rails-nginx-unicorn/</link>
      <pubDate>Sat, 20 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-04-20-rails-nginx-unicorn/</guid>
      <description>rails部署方案众多，今天介绍下nginx+unicorn. 简介 unicorn是一个高性能的Rack HTTP server,它可以使用unix domain s</description>
    </item>
    
    <item>
      <title>nginx的location匹配规则详解</title>
      <link>https://www.mojidong.com/post/2013-04-15-nginx-location-rule/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-04-15-nginx-location-rule/</guid>
      <description>nginx中我们会用location指令来匹配指定的uri进行一些逻辑处理。 location指令语法 1 location [ = | ~ | ~* | ^~ ] uri { ... } location 支持常规</description>
    </item>
    
    <item>
      <title>expect自动交互详解</title>
      <link>https://www.mojidong.com/post/2013-04-14-expect-detail/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-04-14-expect-detail/</guid>
      <description>expect是Unix系统中用来进行自动化控制和测试的软件工具，应用在交互式软件中如telnet，ftp，Passwd，fsck，rlogi</description>
    </item>
    
    <item>
      <title>kaminari设置最大页数</title>
      <link>https://www.mojidong.com/post/2013-04-03-kaminari-max-page/</link>
      <pubDate>Wed, 03 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-04-03-kaminari-max-page/</guid>
      <description>kaminari是一款非常优秀的分页插件，它支持 Rails/Sinatra/Padrino。 它基本上解决我所有的分页需求，不过最近发现一个不</description>
    </item>
    
    <item>
      <title>轻量级代码语法高亮插件Highlight.js</title>
      <link>https://www.mojidong.com/post/2013-04-03-code-highlight/</link>
      <pubDate>Wed, 03 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-04-03-code-highlight/</guid>
      <description>Highlight.js是一款轻量级的语法高亮插件, 支持54种语言和26种主题，详情见这里 本站使用就是该插件。 简单使用 1 2 3 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;styles/default.css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;highlight.pack.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt; 默认</description>
    </item>
    
    <item>
      <title>Rails3:ActiveSupport::Concern详解</title>
      <link>https://www.mojidong.com/post/2013-03-27-rails3-activesupport-concern/</link>
      <pubDate>Wed, 27 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-03-27-rails3-activesupport-concern/</guid>
      <description>模块是方法和常量的集合，模块和类一样，其中的可以包括两种方法：实例方法(Instance Method)、模块方法(Module Method)</description>
    </item>
    
    <item>
      <title>rails3中autoload_paths加载详解</title>
      <link>https://www.mojidong.com/post/2013-03-16-rails3-autoload_paths-principle/</link>
      <pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-03-16-rails3-autoload_paths-principle/</guid>
      <description>在rails3中默认不在加载lib目录下的rb文件。 config/application.rb文件中 1 2 #Custom directories with classes and modules you want to be autoloadable. #config.autoload_paths += %W(#{config.root}/exters) 显然被注</description>
    </item>
    
    <item>
      <title>页面回到顶部的实现及原理</title>
      <link>https://www.mojidong.com/post/2013-03-03-page-top-to-achieve/</link>
      <pubDate>Sun, 03 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-03-03-page-top-to-achieve/</guid>
      <description>现在很多网页都有一个回到顶部的功能，当你拖动滚动条往下拉到一定程度就会在右下方显示一个回到顶部的按钮，点击则可以立即回到页面顶部，非常贴心的</description>
    </item>
    
    <item>
      <title>python多版本管理工具pythonbrew</title>
      <link>https://www.mojidong.com/post/2013-01-06-python-pythonbrew-multi-version-management-tools/</link>
      <pubDate>Sun, 06 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-01-06-python-pythonbrew-multi-version-management-tools/</guid>
      <description>当你需要在一台机器上同时安装多个不同版本的python的时候，你可能就需要使用pythonbrew。 pythonbrew可以帮你下载安装不同</description>
    </item>
    
    <item>
      <title>python获取mac地址</title>
      <link>https://www.mojidong.com/post/2013-01-03-python-get-mac/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-01-03-python-get-mac/</guid>
      <description>1 2 3 4 import uuid node = uuid.getnode() mac = uuid.UUID(int = node).hex[-12:] print mac</description>
    </item>
    
    <item>
      <title>python获取机器名</title>
      <link>https://www.mojidong.com/post/2013-01-03-python-get-hostname/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-01-03-python-get-hostname/</guid>
      <description>1 2 import socket print socket.gethostname()</description>
    </item>
    
    <item>
      <title>urllib2上传文件</title>
      <link>https://www.mojidong.com/post/2013-01-03-urllib2-upload-file/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-01-03-urllib2-upload-file/</guid>
      <description>httplib2好像不支持文件上传,无奈不得不回去使用urllib2。 urllib2本身是不支持文件上传的，但是其良好的扩展性使得其实现这一</description>
    </item>
    
    <item>
      <title>由urlib2转向使用httplib2</title>
      <link>https://www.mojidong.com/post/2013-01-02-urllib2-migrate-httplib2/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2013-01-02-urllib2-migrate-httplib2/</guid>
      <description>提到python下http相关的库一般都会想到urllib、urllib2、httplib。 httplib实现了HTTP和HTTPS的客户端</description>
    </item>
    
    <item>
      <title>rsync命令使用介绍</title>
      <link>https://www.mojidong.com/post/2012-12-29-rsync-introduction/</link>
      <pubDate>Sat, 29 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-12-29-rsync-introduction/</guid>
      <description>rsync是Unix下的一款应用软件，它能同步更新两处计算机的文件与目录，并适当利用差分编码以减少数据传输。rsync中一项与其他大部分类似</description>
    </item>
    
    <item>
      <title>python的web框架webpy 六 </title>
      <link>https://www.mojidong.com/post/2012-09-08-python-web-framework-webpy-6/</link>
      <pubDate>Sat, 08 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-09-08-python-web-framework-webpy-6/</guid>
      <description>webpy中获取get和post参数的方式非常简单 1 2 3 4 args=web.input() name=args.get(&amp;#39;name&amp;#39;) age=args.get(&amp;#39;age&amp;#39;) sex=args.get(&amp;#39;sex&amp;#39;) 需要注意的是上面方法获得的参数的类型全是unicode,所以对于数值需要作</description>
    </item>
    
    <item>
      <title>python的web框架webpy【session 和 cookie】五</title>
      <link>https://www.mojidong.com/post/2012-09-08-python-web-framework-webpy-session-cookie-5/</link>
      <pubDate>Sat, 08 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-09-08-python-web-framework-webpy-session-cookie-5/</guid>
      <description>webpty中使用session非常简单 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import web web.config.debug = False urls = ( &amp;#34;/count&amp;#34;, &amp;#34;count&amp;#34;, &amp;#34;/reset&amp;#34;, &amp;#34;reset&amp;#34; ) app = web.application(urls, locals()) session = web.session.Session(app, web.session.DiskStore(&amp;#39;sessions&amp;#39;), initializer={&amp;#39;count&amp;#39;: 0}) class count: def GET(self): session.count +=</description>
    </item>
    
    <item>
      <title>shell中判断变量为null</title>
      <link>https://www.mojidong.com/post/2012-09-08-shell-determine-variable-is-null/</link>
      <pubDate>Sat, 08 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-09-08-shell-determine-variable-is-null/</guid>
      <description>方法一 1 2 3 4 5 if [ $x ];then echo &amp;#39;not null&amp;#39; else echo &amp;#39;is null&amp;#39; fi 方法二 1 2 3 4 5 if [ -z &amp;#34;$x&amp;#34; ]; echo &amp;#39;is null&amp;#39; else echo &amp;#39;not null&amp;#39; fi</description>
    </item>
    
    <item>
      <title>shell中给变量设置默认值</title>
      <link>https://www.mojidong.com/post/2012-09-08-shell-set-default-value/</link>
      <pubDate>Sat, 08 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-09-08-shell-set-default-value/</guid>
      <description>通常shell中我们需要给变量设置默认值，可能会写出如下代码 1 2 3 4 #!/bin/bash if [ ! $1 ]; then $1=&amp;#39;default&amp;#39; fi 显然这种方式在变量少的时候没啥问题，一旦变量多起来，我</description>
    </item>
    
    <item>
      <title>处理shell中未赋值变量造成的灾难</title>
      <link>https://www.mojidong.com/post/2012-09-08-shell-process-unassigned-variables/</link>
      <pubDate>Sat, 08 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-09-08-shell-process-unassigned-variables/</guid>
      <description>在编写shell的时候我们都需要万分小心，尤其是给root执行的脚本 1 2 3 4 #!/bin/bash .... rm -rf $1/$2/bin/ .... 假设上述脚本我执行的时候没有传递参数，造成的后果是相</description>
    </item>
    
    <item>
      <title>python的web框架webpy(一) </title>
      <link>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-1/</link>
      <pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-1/</guid>
      <description>python的web框架是一个百花齐放的世界，完全列表请看这里。 面对如此众多的框架我们要如何选择！它们都有各自的优缺点，你不可能找到一款完美</description>
    </item>
    
    <item>
      <title>python的web框架webpy(二)</title>
      <link>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-2/</link>
      <pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-2/</guid>
      <description>之前介绍了webpy，还写了一个自己的web程序，下面我们就来分析下代码。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # coding:utf-8 import web urls=( &amp;#39;/&amp;#39;,&amp;#39;index&amp;#39; ) app=web.application(urls,globals()) class index: def GET(self): return &amp;#39;hello webpy!&amp;#39; if __name__==&amp;#39;__main__&amp;#39;: app.run()</description>
    </item>
    
    <item>
      <title>python的web框架webpy【Templetor】（四）</title>
      <link>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-template-4/</link>
      <pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-template-4/</guid>
      <description>之前我们讲的都是简单的返回文本到浏览器，例如下面将会返回hello word到浏览器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # coding:utf-8 import web urls=( &amp;#39;/&amp;#39;,&amp;#39;index&amp;#39; ) app=web.application(urls,globals()) class index: def GET(self): return &amp;#39;hello</description>
    </item>
    
    <item>
      <title>python的web框架webpy【路由规则】（三）</title>
      <link>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-route-3/</link>
      <pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-08-python-web-framework-webpy-route-3/</guid>
      <description>今天重点说下webpy的路由规则。 1 2 3 4 5 6 7 8 #这里声明了三条路由规则，它是一个tuple,由url匹配规则和处理类组成 #url匹配规则</description>
    </item>
    
    <item>
      <title>linux下安装mysql</title>
      <link>https://www.mojidong.com/post/2012-08-07-linux-install-mysql/</link>
      <pubDate>Tue, 07 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-07-linux-install-mysql/</guid>
      <description>首先下载mysql源码包，我这里下载MySQL Community Server 5.5。 检查机器是否装有cmake,直接输入cmake显示帮助信息表示已安装 &amp;gt;现在m</description>
    </item>
    
    <item>
      <title>python修改图片尺寸</title>
      <link>https://www.mojidong.com/post/2012-08-07-python-resize-image/</link>
      <pubDate>Tue, 07 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-07-python-resize-image/</guid>
      <description>python对图片的操作需要使用到(Python Imaging Library)PIL库，PIL可以处理几乎所有的图片类型，了解更多请点击这里。 下载PIL</description>
    </item>
    
    <item>
      <title>python操作mysql数据库</title>
      <link>https://www.mojidong.com/post/2012-08-07-python-operate-mysql/</link>
      <pubDate>Tue, 07 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-08-07-python-operate-mysql/</guid>
      <description>python操作mysql需要用到MySQLdb这个库。 下载MySQLdb，点击这里下载 使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import MySQLdb try: con = MySQLdb.connect(host=&amp;#39;192.168.1.100&amp;#39;, user=&amp;#39;myuser&amp;#39;, passwd=&amp;#39;123456&amp;#39;, port=&amp;#39;3306&amp;#39;, db=&amp;#39;mydb&amp;#39;,charset=&amp;#39;utf8&amp;#39;)</description>
    </item>
    
    <item>
      <title>varnish安装及配置（三）</title>
      <link>https://www.mojidong.com/post/2012-01-11-varnish-install-config-3/</link>
      <pubDate>Wed, 11 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-01-11-varnish-install-config-3/</guid>
      <description>varnish通过几个辅助命令行工具观察varnish的工作情况 varnishlog: varnish的日志是写入共享内存的，可以使用varnishlog命令行工</description>
    </item>
    
    <item>
      <title>varnish安装及配置（二）</title>
      <link>https://www.mojidong.com/post/2012-01-10-varnish-install-config-2/</link>
      <pubDate>Tue, 10 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-01-10-varnish-install-config-2/</guid>
      <description>Varish Configuration Language 简称VCL，通过它我们可以完成一些复杂的逻辑处理。下面将详细介绍： Backend declarations: 1 2 3 4 5 6 7 backend www { .host = &amp;#34;www.example.com&amp;#34;; .port = &amp;#34;80&amp;#34;; .connect_timeout = 1s; .first_byte_timeout = 5s; .between_bytes_timeout = 2s; } 或者 1 2 3 4</description>
    </item>
    
    <item>
      <title>varnish安装及配置（一）</title>
      <link>https://www.mojidong.com/post/2012-01-09-varnish-install-config-1/</link>
      <pubDate>Mon, 09 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.mojidong.com/post/2012-01-09-varnish-install-config-1/</guid>
      <description>varnish是一款高性能的开源HTTP加速器，用来缓存静态文件（图片,js,css）以减少后端服务器压力,性能要比squid高很多。 下载v</description>
    </item>
    
  </channel>
</rss>